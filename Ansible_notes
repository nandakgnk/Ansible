#adding new commit to the file
#ansible all -m ping 
#ansible all -m ping -i inventory
####Diable Host checking
#export Ansible_Host_Key_Checking=False

#Add below line in Ansible.cfg
#cat Ansible.cfg | grep -i host_key
[default]
host_key_checking = False
## ansible ser1:ser2:ser3: -m ping

#ansible web -m ping  # To test web group servers
#ansible web:oracle -m ping # to test 2 group servers at a time (web and Oracle, No need to use all as explicit mention group)

To explict create ansible.cfg, Create it in your home di with .ansible.cfg
#cd ~/ touch .ansible.cfg

ansible -i inventory <servers/group/host> -m setup 
ansible -i inventory <servers/group/host> -m shell -a "uptime"
ansible [-i prod_inv]  server_name:group1:group2 -m module [-a argument_value]

###########################################################
ansible all -m ping
ansible db:web_server -m ping
###################################
ansible db:web_server -m ping
ansible db:web_server -m shell -a "free -m"

###################################

ansible -i prod_inv -m shell -a "uptime"
ansible -i prod_inv -m shell -a "free -m"
----------------------------------------------------------
ansible [-i prod_inv]  server_name:group1:group2 -m module [-a argument_value]
##############################################

Ansible Downloading a file using fetch module .

file.txt will be downloaded to current working dir on ansible Master node.
ansible db -m fetch -a "src='/home/user'/file.txt dest=./demo"

To see Module infomration
ansible doc -l | grep -i shell <module>

->Execute the below command to seee to which location the python modules are shared. under home dir .
->ansible folder will be created inside it you may see the Loaded python module. once the command executed
#ANSIBLE_KEEP_REMOTE_FILES=1 ansible -i prod_inv -m shell -a "uptime"

#Add/Edit fork value to execute your ansible script parallel, usually it will be 5.
echo 'fork = 5' > ansible.cfg 
-> Ansible by default execute jobs parallel (Based on fork value no of parallel server depends). To make job execute serially, change fork value to '1' fork = 1. 

###########

ansible db -m copy -a "content='File content' dest=/tmp/hello.txt"
ansible db -m fetch -a "src='/home/user'/file.txt dest=./demo"
#when flat = yes you should mentione the downloaded file name.
#ansible db -m fetch -a "src='/home/user'/file.txt dest=./demo/{{ inventory_hostname }}_demo_txt flat=yes" 

-> Ansible Facts are nothing but infomration about Managed Nodes like OS distro, release, procecssor, python etc
#ansible host1 -m setup 
#ansible host1 -m setup -a "filter=ansible_mounts"
#ansible groupname -m setup 

-> Types of Facts
  -> Custom facts (To find Git version,httpd verison)
  -> Default facts
  
  
  Steps to create Custom facts. 
  
 -> create /etc/ansible/facts.d on Managed Nodes
  -> inside facts.d place once or more custom facts file with extenstion as .fact
   -> The output of fact file should be a json
    -> The fact file should have execution permission. 
    -> login to remote node server(client1) 2. create facts.d in /etc/ansible/facts.d 3. create file with .fact extention (git_ver.fact) and add below lines.
    #########################################################
        > #!/bin/bash
        > git_ver=$(git --version | awk 'NR ==1 {print $3}') and save exit the file 
        > http_ver=$(httpd --version | awk 'NR ==1 {print $3}') and save exit the file with chmod 755 permission
        > cat << EOF 
            {
            "GIT_Version" : "$git_ver" 
            "HTTPD_Version" : "$http_ver" 
          }
          EOF
      ####################################################
      Custom facts save under ansible_local
      #ansible hosts1 -m setup -a 'filter=ansible_local'
      
      -> Debug module
         
         --- 
         - name: This is ssimpel to understand debug moduel
           hosts: localhost
           tasks: 
           - name: To check debug
             #- debug: msg="Welcome to the playbook"
             debug:
             msg: "Welcome to Ansible"
             -------------OR------------
             
           - name: This is ssimpel to understand debug moduel
           hosts: localhost
           tasks: 
           - name: To check debug
             debug:
               msg: 
                - "Welcome to Ansible"
                - "These are basic concept"
                - "Check another heading"
            --------------------------------
           - name: This is ssimpel to understand debug moduel
           hosts: localhost
           tasks: 
           - name: To check debug
             debug:
               msg: "The hostname is: {{ inventory_hostname }}" #default inv variable, To print info with meassage use debug with 'msg'.
               var: inventory_hostname  # To just print variable without message. just to print only 'variable info use 'var' key.
           ------------------------------------------------    
           - name: This is ssimpel to understand debug moduel
           hosts: localhost
           tasks: 
           - name: To check debug
             debug:
               msg: "Welcome to Ansible"      
           - name: To check debug
             debug:
               msg: "Welcome to Ansible - 2"
               #ansible-playbook plabookname
-> Debug Module .. Read and Print Variable 
        ---
        - hosts: localhost
          vars:
            x: 30
            my_name: "Narendra"
            #to use interactive variable: 
            vars_prompt:
               name: uname
               prompt: Enter the username
            tasks: 
            - debug: 
               msg: 
                 - "The x value is: {{ X }}"
                 - "The anme is: {{ my_name }}"
                 - "The uname is: {{ uname }}"
               ---------------------------------------------------
               -> Debug Module .. Read and Print Variable 
        ---
        - hosts: localhost
          vars:
            x: 30
            my_name: "Narendra"
            #to use interactive variable: 
            vars_prompt:
               name: uname1
               prompt: Enter the username
               private: no
               name: password1
               prompt: Enter password
               private: yes #will not display entered characters.
            tasks: 
            - debug: 
               msg: 
                 - "The x value is: {{ X }}"
                 - "The anme is: {{ my_name }}"
                 - "The uname is: {{ uname }}"
                 - The value of uname1 is: "{{ uname }}" and password is: "{{ password1 }}"
                        
    _____________________________________________________________________________________            
      
      ----> extra variables: 
       ---
       - hosts: localhost
         #x value not define so you will get error, u may pass value using -e while executing the script, please see command example.
         gather_facts: yes
         tasks: 
           debug:
             var: x
      
        #ansible-playbook playbook.yml -e "x=56"
        
        Three different types of variables in different forms. 
           -> scalar
           -> sequence
           -> Map
           -> files with variables. 
           
  
###############
  Comparision Operator, When checked it only return true or flase. 
  
  ---
  - name: Working with Comp Operator
    hosts: all
    gather_facts: yes
    vars: 
       x: 7
       y: 10
     tasks:
      -debug: 
          msg:
            - "The value of x is: {{ x }} and value of y is: {{ y }}
            - "x == y: {{ x == y}" ##Return: "x == y: False"
            - "x != y: {{ x != y}" ##Return: "x != y: True"
            - "x < y: {{ x < y}" 
            - "x > y: {{ x > y}"
            - x <= y: {{ x <= y}"
             - "x => y: {{ x => y }}"
             
    ___________________________________________________________
    
    
            
           
  

